"""
Astraeus Link Agent 구현 샘플 모듈
"""

import os
import yaml
from jinja2 import Environment, FileSystemLoader, Template

# 기본 템플릿 내용 (fallback용)
default_template = '''
# Fallback Astraeus Link Agent 설정
TARGET_ΔS: -0.05
TARGET_ΔR: +0.03
ΔS_GRAD_THRESHOLD: 0.01
FRAME_DIVERGENCE_THETA: 0.35
ELASTICITY_SIGMA_TIERS: [0.005, 0.01, 0.02]

STEPS: 3

ELASTICITY_RULE: |
  σ < 0.005 => ΔR += 1
  σ > 0.02  => ΔR -= 1

CANVAS:
  M1: ['ψ-log', 'p_f']
  M2: ['함수 추상화', 'w₄·p_f']
  M3: ['외부 검증']
  M3b: ['Frame Sentinel', 'θ 조정']
  M4: ['A/B/C 테스트', '회고']
  M5: ['CHI·ECR·ΔS·p_f 모니터', '경고']

SEARCH_CRITERIA:
  freshness: '1 month'
  authority:
    journal: 0.9
    institution: 0.8
    web: 0.5
  relevance: 0.7

MONITORING:
  log_endpoint: "https://monitoring.company/api/astraeus"
  metrics: ['ΔS', 'ΔR', 'ΔS_grad', 'sigma', 'frame_div', 'pruning_signal', 'latency', 'ext_fail']
  alert_thresholds:
    ΔS: 0.2
    ΔR: 0.1
    ΔS_grad: 0.015
    frame_div: 5
    latency: 2.0
  alert_channels: ['slack', 'dashboard']

FORMAT_MODE: ['STANDARD', 'BRIEF', 'EXTENDED', 'DETAILED']
'''

class AstraeusAgent:
    def __init__(self, template_path: str = 'examples/agent_prompt.yml'):
        '''
        template_path이 가리키는 파일이 없으면 기본 fallback 템플릿을 사용합니다.
        명시적 다른 경로(nonexistent.yml)는 오류로 처리합니다.
        '''
        # base_dir 결정
        try:
            base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
        except NameError:
            base_dir = os.getcwd()

        full_path = os.path.join(base_dir, template_path)
        self.env = Environment(
            loader=FileSystemLoader(base_dir),
            trim_blocks=True,
            lstrip_blocks=True
        )

        if os.path.isfile(full_path):
            # 실제 파일 로드
            self.template = self.env.get_template(template_path)
        else:
            if template_path != 'examples/agent_prompt.yml':
                raise FileNotFoundError(f"Template file not found: {full_path}")
            # fallback: from string
            self.template = Template(default_template)

    def parse_prompt(self, question: str, keywords: list, metrics: dict) -> dict:
        rendered = self.template.render(
            question=question,
            keywords=keywords,
            metrics=metrics
        )
        try:
            return yaml.safe_load(rendered)
        except yaml.YAMLError as e:
            raise ValueError(f"YAML parsing error: {e}\nRendered:\n{rendered}")

    def process_question(self, question: str, keywords: list, metrics: dict) -> dict:
        return self.parse_prompt(question, keywords, metrics)

    # 스켈레톤 메서드
    def evaluate_meta(self, metrics: dict):
        raise NotImplementedError
    def run_canvas(self, canvas_config: dict):
        raise NotImplementedError
    def trigger_external_search(self, criteria: dict):
        raise NotImplementedError
    def alert_loop(self, metrics: dict):
        raise NotImplementedError

# 데모 및 테스트
if __name__ == '__main__':
    # 기본 fallback 템플릿 로드 테스트
    agent = AstraeusAgent()
    result = agent.process_question("Q", [], {})
    assert isinstance(result, dict), 'process_question should return a dict'

    # 명시적 경로 에러 테스트
    try:
        AstraeusAgent(template_path='nonexistent.yml')
        raise AssertionError('Expected FileNotFoundError for nonexistent template_path')
    except FileNotFoundError:
        pass

    # 파일 경로 지정 시 실제 예시 파일도 테스트 가능
    print('All tests passed.')
